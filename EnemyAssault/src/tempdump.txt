class screenPt
{
private:
	GLint x, y;
public:
	screenPt()
	{
		x = y = 0;
	}
	void setCoords(GLint xCoordValue, GLint yCoordValue)
	{
		x = xCoordValue;
		y = yCoordValue;
	}

	GLint getx() const
	{
		return x;
	}

	GLint gety() const
	{
		return y;
	}

	void incrementx()
	{
		x++;
	}

	void decrementy()
	{
		y--;
	}
};

void CircleMidpoint(int xc, int yc, int radius)
{
	screenPt circPt;

	GLint p = 1 - radius;
	circPt.setCoords(0, radius);
	void circlePlotPoints(GLint, GLint, screenPt);
	circlePlotPoints(xc, yc, circPt);

	while(circPt.getx() < circPt.gety())
	{
		circPt.incrementx();
		if(p < 0)
		{
			p += 2 * circPt.getx() + 1;
		}
		else
		{
			circPt.decrementy();
			p += 2 * (circPt.getx() - circPt.gety()) + 1;
		}
		circlePlotPoints(xc, yc, circPt);
	}
}

void circlePlotPoints(GLint xc, GLint yc, screenPt circPt)
{
	SetPixel(xc + circPt.getx(), yc + circPt.gety());
	SetPixel(xc - circPt.getx(), yc + circPt.gety());
	SetPixel(xc + circPt.getx(), yc - circPt.gety());
	SetPixel(xc - circPt.getx(), yc - circPt.gety());
	SetPixel(xc + circPt.gety(), yc + circPt.getx());
	SetPixel(xc - circPt.gety(), yc + circPt.getx());
	SetPixel(xc + circPt.gety(), yc - circPt.getx());
	SetPixel(xc - circPt.gety(), yc - circPt.getx());
}